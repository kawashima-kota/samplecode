/*<APPLET CODE="laplace1.class" WIDTH=500 HEIGHT=500></APPLET>*/import java.applet.*;import java.awt.*;import java.io.*;public class laplace1 extends Applet{	JGraphics jg;	Dimension d;	Color Background=Color.white;		int i,j,nx=41,ny=21,it,non,noe,ip,wx,wy;	double dx,dy,omg=1.0;	double x[][] = new double[100][100];	double y[][] = new double[100][100];	double f[][] = new double[100][100];	double f1[][] = new double[100][100];	int node[][] = new int[100][100];	int ii[][] = new int [1000][5];	double gx[] = new double[5000];	double gy[] = new double[5000];	double gf[] = new double[5000];	double ermax,er;		public void paint(Graphics g){		pre();		cal();		fig(g);	}	public void pre(){		non=nx*ny;		dx=2.0/(double)(nx-1);		dy=1.0/(double)(ny-1);				for(i=1;i<=nx;i++){			for(j=1;j<=ny;j++) node[i][j]=(i-1)*ny+j;		}		noe=0;		for(i=1;i<=nx-1;i++){			for(j=1;j<=ny;j++){				noe=noe+1;				ii[noe][1]=node[i][j];				ii[noe][2]=node[i+1][j];				ii[noe][3]=node[i+1][j+1];				ii[noe][4]=node[i][j+1];			}		}		for(i=1;i<=nx;i++){			for(j=1;j<=ny;j++){				ip=node[i][j];				gx[ip]=dx*(double)(i-1)*200.0;				gy[ip]=(1.0-dy*(double)(j-1))*200.0;			}		}	}	public void cal(){		for(int i=0;i<nx;i++){			for(j=0;j<ny;j++){				x[i][j]=dx*(double)i;				y[i][j]=dy*(double)j;			}		}		for(int i=0;i<nx;i++){			for(j=0;j<ny;j++){				f[i][j]=0.0;			}		}		it=0;		ermax=1.0;		while(ermax>0.00001){			it++;			i=0;			//ç∂ã´äEílèåè			for(j=0;j<ny;j++){				f[i][j]=Math.sin(Math.PI*y[i][j]);			}			i=nx-1;			//âEã´äEílèåè			for(j=0;j<ny;j++){				f[i][j]=Math.sin(Math.PI*y[i][j]);			}			i=ny-1;			//è„ã´äEílèåè			for(i=0;i<nx;i++){				f[i][j]=Math.sin(Math.PI*x[i][j]/2);			}			j=0;			//â∫ã´äEílèåè			for(i=0;i<nx;i++){				f[i][j]=Math.sin(Math.PI*x[i][j]/2);			}			for(i=1;i<nx-1;i++){				for(j=1;j<ny-1;j++){					f1[i][j]=(f[i+1][j]+f[i-1][j]+f[i][j+1]+f[i][j-1])/4.0;				}			}			ermax=1.0e-6;			for(i=1;i<nx-1;i++){				for(j=1;j<ny-1;j++){					er=Math.abs(f1[i][j]-f[i][j]);					if(er>ermax) ermax=er;					f[i][j]=f[i][j]+omg*(f1[i][j]-f[i][j]);				}			}		}		for(i=1;i<=nx;i++){			for(j=1;j<=ny;j++){				ip=node[i][j];				gf[ip]=f[i-1][j-1];			}		}	}	public void fig(Graphics g){		FontMetrics fm=g.getFontMetrics();		Dimension d=getSize();		wx=d.width;		wy=d.height;		g.setColor(Background);		g.fillRect(0,0,wx,wy);				jg = new JGraphics(wx,wy,g);		jg.Contour(gf,ii,gx,gy,noe,g);		g.setColor(Color.black);		g.drawRect(0,0,400,200);	}}			